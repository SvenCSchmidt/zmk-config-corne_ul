#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    chosen {
        zmk,matrix_transform = &keymap_transform_1;
    };

    behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <170>;// <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        hmg: homerow_mod_gui {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;// <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        hma: homerow_mod_alt {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;// <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        Cmb_Tilde {
            bindings = <&kp TILDE>;
            key-positions = <25 26>;
            layers = <2>;
        };

        Umlaut_A {
            bindings = <&kp RA(Q)>;
            key-positions = <2 3>;
            layers = <0>;
        };

        Umlaut_S {
            bindings = <&kp RA(S)>;
            key-positions = <3 4>;
            layers = <0>;
        };

        Umlaut_U {
            bindings = <&kp RA(Y)>;
            key-positions = <7 8>;
            layers = <0>;
        };

        Umlaut_O {
            bindings = <&kp RA(P)>;
            key-positions = <8 9>;
            layers = <0>;
        };

        Euro {
            bindings = <&kp RA(N5)>;
            key-positions = <32 33>;
            layers = <0>;
        };

        Cmb_Quote {
            bindings = <&kp SQT>;
            key-positions = <9 10>;
            layers = <0>;
        };

        Cmb_Tab {
            bindings = <&kp TAB>;
            key-positions = <27 28>;
            layers = <0 1 2 4>;
        };

        Cmb_Cut {
            bindings = <&kp LC(X)>;
            key-positions = <25 26>;
            layers = <0>;
        };

        Cmb_Copy {
            bindings = <&kp LC(C)>;
            key-positions = <26 27>;
            layers = <0>;
        };

        Cmb_Paste {
            bindings = <&kp LC(V)>;
            key-positions = <27 29>;
            layers = <0>;
        };

        Cmb_Reset {
            bindings = <&bootloader>;
            key-positions = <14 15 16>;
            layers = <4>;
        };

        Cmb_BSPC {
            bindings = <&kp BSPC>;
            key-positions = <31 32>;
            layers = <0>;
        };

        Cmb_CtrlBSPC {
            bindings = <&kp LC(BSPC)>;
            key-positions = <31 32 33>;
            layers = <0>;
        };

        Cmb_ESC {
            bindings = <&kp ESC>;
            key-positions = <1 2>;
            layers = <0 1 2 3 4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            label = "Base";
            bindings = <
                &kp Q        &kp W        &kp F         &kp P         &kp B        &kp J        &kp L         &kp U         &kp Y          &kp SEMI
                &hmg LGUI A  &hma LALT R  &bhm LSHFT S  &bhm LCTRL T  &kp G        &kp M        &bhm RCTRL N  &bhm RSHFT E  &hma LALT I    &hmg RGUI O
                &kp Z        &hma RALT X  &kp C         &kp D         &kp V        &kp K        &kp H         &kp COMMA     &hma RALT DOT  &kp FSLH
                                          &kp ESC       &kp BSPC      &lt 1 RET    &lt 2 SPACE  &kp DEL       &none
            >;
        };

        nav {
            label = "nav";
            bindings = <
                &kp ESC   &kp PSCRN        &kp UP    &kp INS    &kp PG_UP    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
                &kp HOME  &kp LEFT         &kp DOWN  &kp RIGHT  &kp END      &kp K_APP     &kp RCTRL     &kp RSHFT     &kp LALT      &kp RGUI
                &kp SLCK  &kp PAUSE_BREAK  &kp BSPC  &kp DEL    &kp PG_DN    &none         &bt BT_PRV    &bt BT_NXT    &kp RALT      &bt BT_CLR
                                           &trans    &trans     &none        &mo 3         &none         &none
            >;
        };

        num {
            label = "num";
            bindings = <
                &kp RS(N1)    &kp RS(N2)     &kp RS(N3)     &kp RS(N4)     &kp RS(N5)    &kp LS(N6)  &kp LS(N7)     &kp LS(N8)     &kp LS(N9)     &kp LS(N0)
                &hmg LGUI N1  &hma LALT N2   &bhm LSHFT N3  &bhm LCTRL N4  &kp N5        &kp N6      &bhm LCTRL N7  &bhm RSHFT N8  &hma LALT N9   &hmg RGUI N0
                &kp MINUS     &hma RALT SQT  &kp EQUAL      &kp LPAR       &kp LBKT      &kp RBKT    &kp RPAR       &kp COMMA      &hma RALT DOT  &kp BSLH
                                             &trans         &trans         &tog 4        &none       &none          &none
            >;
        };

        fun {
            label = "fun";
            bindings = <
                &kp F1    &kp F2    &kp F3     &kp F4     &kp F5     &kp F6   &kp F7     &kp F8     &kp F9    &kp F10
                &kp LGUI  &kp LALT  &kp LSHFT  &kp LCTRL  &kp F11    &kp F12  &kp RCTRL  &kp RSHFT  &kp LALT  &kp RGUI
                &none     &kp RALT  &none      &none      &none      &none    &none      &none      &kp RALT  &none
                                    &none      &none      &none      &none    &none      &none
            >;
        };

        pad {
            label = "pad";
            bindings = <
                &to 0  &none     &none    &none     &none      &kp FSLH   &kp N7  &kp N8  &kp N9  &kp MINUS
                &none  &none     &none    &none     &none      &kp STAR   &kp N4  &kp N5  &kp N6  &kp PLUS
                &none  &kp BSPC  &kp DEL  &none     &none      &kp N0     &kp N1  &kp N2  &kp N3  &kp COMMA
                                 &none    &kp BSPC  &kp RET    &kp SPACE  &none   &none
            >;
        };
    };
};

&nice_view_spi { cs-gpios = <&pro_micro 0 GPIO_ACTIVE_HIGH>; };
